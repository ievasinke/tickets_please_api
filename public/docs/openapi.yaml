openapi: 3.0.3
info:
  title: 'Tickets Please API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/login:
    post:
      summary: Login
      operationId: login
      description: "Authenticate the user and returns the user's API token."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Authenticated
                  data:
                    token: "env('SCRIBE_AUTH_KEY')"
                  status: 200
                properties:
                  message:
                    type: string
                    example: Authenticated
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: "env('SCRIBE_AUTH_KEY')"
                  status:
                    type: integer
                    example: 200
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: georgianna.bergstrom@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '_vj|hQM&M('
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: Logout
      operationId: logout
      description: "Signs out the user and destroy's API token."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - Authentication
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 11
                  name: 'The Manager'
                  email: manager@manager.com
                  email_verified_at: null
                  is_manager: true
                  created_at: '2025-01-21T13:57:48.000000Z'
                  updated_at: '2025-01-21T13:57:48.000000Z'
                properties:
                  id:
                    type: integer
                    example: 11
                  name:
                    type: string
                    example: 'The Manager'
                  email:
                    type: string
                    example: manager@manager.com
                  email_verified_at:
                    type: string
                    example: null
                  is_manager:
                    type: boolean
                    example: true
                  created_at:
                    type: string
                    example: '2025-01-21T13:57:48.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-21T13:57:48.000000Z'
      tags:
        - Endpoints
  /api/v1/user:
    get:
      summary: ''
      operationId: getApiV1User
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 11
                  name: 'The Manager'
                  email: manager@manager.com
                  email_verified_at: null
                  is_manager: true
                  created_at: '2025-01-21T13:57:48.000000Z'
                  updated_at: '2025-01-21T13:57:48.000000Z'
                properties:
                  id:
                    type: integer
                    example: 11
                  name:
                    type: string
                    example: 'The Manager'
                  email:
                    type: string
                    example: manager@manager.com
                  email_verified_at:
                    type: string
                    example: null
                  is_manager:
                    type: boolean
                    example: true
                  created_at:
                    type: string
                    example: '2025-01-21T13:57:48.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-21T13:57:48.000000Z'
      tags:
        - Endpoints
  /api/v1/tickets:
    get:
      summary: 'Get all tickets'
      operationId: getAllTickets
      description: ''
      parameters:
        -
          in: query
          name: sort
          description: 'Data field(s) to sort by. Separate multiple fields with a commas. Denote descending sort with a minus sign.'
          example: 'sort=title,-createdAt'
          required: false
          schema:
            type: string
            description: 'Data field(s) to sort by. Separate multiple fields with a commas. Denote descending sort with a minus sign.'
            example: 'sort=title,-createdAt'
            nullable: false
        -
          in: query
          name: 'filter[status]'
          description: 'Filter by status code: A, C, H, X.'
          example: null
          required: false
          schema:
            type: string
            description: 'Filter by status code: A, C, H, X.'
            example: null
            nullable: false
        -
          in: query
          name: 'filter[title]'
          description: 'Filter by title. Wildcards are supported.'
          example: '*fix*'
          required: false
          schema:
            type: string
            description: 'Filter by title. Wildcards are supported.'
            example: '*fix*'
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: ticket
                      id: 133
                      attributes:
                        title: 'Ticket #111'
                        status: X
                        created_at: '2025-02-05T18:52:27.000000Z'
                        updated_at: '2025-02-05T18:52:27.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/133'
                    -
                      type: ticket
                      id: 132
                      attributes:
                        title: 'Ticket #11'
                        status: X
                        created_at: '2025-02-05T18:49:29.000000Z'
                        updated_at: '2025-02-05T18:49:29.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 3
                          links:
                            self: 'http://localhost/api/v1/authors/3'
                      links:
                        self: 'http://localhost/api/v1/tickets/132'
                    -
                      type: ticket
                      id: 131
                      attributes:
                        title: 'Ticket #11'
                        status: X
                        created_at: '2025-02-05T18:48:24.000000Z'
                        updated_at: '2025-02-05T18:48:24.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 3
                          links:
                            self: 'http://localhost/api/v1/authors/3'
                      links:
                        self: 'http://localhost/api/v1/tickets/131'
                    -
                      type: ticket
                      id: 130
                      attributes:
                        title: 'Ticket #11'
                        status: X
                        created_at: '2025-02-05T18:48:21.000000Z'
                        updated_at: '2025-02-05T18:48:21.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 3
                          links:
                            self: 'http://localhost/api/v1/authors/3'
                      links:
                        self: 'http://localhost/api/v1/tickets/130'
                    -
                      type: ticket
                      id: 129
                      attributes:
                        title: 'Ticket #11'
                        status: X
                        created_at: '2025-02-05T18:47:57.000000Z'
                        updated_at: '2025-02-05T18:47:57.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 3
                          links:
                            self: 'http://localhost/api/v1/authors/3'
                      links:
                        self: 'http://localhost/api/v1/tickets/129'
                    -
                      type: ticket
                      id: 128
                      attributes:
                        title: 'Ticket #11'
                        status: X
                        created_at: '2025-02-05T18:42:03.000000Z'
                        updated_at: '2025-02-05T18:42:03.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 3
                          links:
                            self: 'http://localhost/api/v1/authors/3'
                      links:
                        self: 'http://localhost/api/v1/tickets/128'
                    -
                      type: ticket
                      id: 127
                      attributes:
                        title: 'Ticket #10'
                        status: X
                        created_at: '2025-02-05T18:41:50.000000Z'
                        updated_at: '2025-02-05T18:41:50.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/127'
                    -
                      type: ticket
                      id: 126
                      attributes:
                        title: 'Ticket #9'
                        status: X
                        created_at: '2025-02-05T18:38:42.000000Z'
                        updated_at: '2025-02-05T18:38:42.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/126'
                    -
                      type: ticket
                      id: 125
                      attributes:
                        title: 'Ticket #9'
                        status: X
                        created_at: '2025-02-05T18:37:51.000000Z'
                        updated_at: '2025-02-05T18:37:51.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/125'
                    -
                      type: ticket
                      id: 124
                      attributes:
                        title: 'Ticket #9'
                        status: X
                        created_at: '2025-02-05T18:37:03.000000Z'
                        updated_at: '2025-02-05T18:37:03.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 2
                          links:
                            self: 'http://localhost/api/v1/authors/2'
                      links:
                        self: 'http://localhost/api/v1/tickets/124'
                    -
                      type: ticket
                      id: 123
                      attributes:
                        title: 'Ticket #9'
                        status: X
                        created_at: '2025-02-05T18:35:20.000000Z'
                        updated_at: '2025-02-05T18:35:20.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/123'
                    -
                      type: ticket
                      id: 122
                      attributes:
                        title: 'Ticket #9'
                        status: X
                        created_at: '2025-02-05T18:31:04.000000Z'
                        updated_at: '2025-02-05T18:31:04.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 2
                          links:
                            self: 'http://localhost/api/v1/authors/2'
                      links:
                        self: 'http://localhost/api/v1/tickets/122'
                    -
                      type: ticket
                      id: 121
                      attributes:
                        title: 'Ticket #9'
                        status: X
                        created_at: '2025-02-05T18:30:54.000000Z'
                        updated_at: '2025-02-05T18:30:54.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/121'
                    -
                      type: ticket
                      id: 120
                      attributes:
                        title: 'Create ticket title'
                        status: X
                        created_at: '2025-02-04T14:27:10.000000Z'
                        updated_at: '2025-02-04T14:27:10.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/120'
                    -
                      type: ticket
                      id: 119
                      attributes:
                        title: 'Ticket #8'
                        status: X
                        created_at: '2025-01-30T15:47:32.000000Z'
                        updated_at: '2025-01-30T15:47:32.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 2
                          links:
                            self: 'http://localhost/api/v1/authors/2'
                      links:
                        self: 'http://localhost/api/v1/tickets/119'
                  links:
                    first: 'http://localhost/api/v1/tickets?page=1'
                    last: 'http://localhost/api/v1/tickets?page=9'
                    prev: null
                    next: 'http://localhost/api/v1/tickets?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 9
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://localhost/api/v1/tickets?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=4'
                        label: '4'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=5'
                        label: '5'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=6'
                        label: '6'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=7'
                        label: '7'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=8'
                        label: '8'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=9'
                        label: '9'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/tickets'
                    per_page: 15
                    to: 15
                    total: 126
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: ticket
                        id: 133
                        attributes:
                          title: 'Ticket #111'
                          status: X
                          created_at: '2025-02-05T18:52:27.000000Z'
                          updated_at: '2025-02-05T18:52:27.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/133'
                      -
                        type: ticket
                        id: 132
                        attributes:
                          title: 'Ticket #11'
                          status: X
                          created_at: '2025-02-05T18:49:29.000000Z'
                          updated_at: '2025-02-05T18:49:29.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 3
                            links:
                              self: 'http://localhost/api/v1/authors/3'
                        links:
                          self: 'http://localhost/api/v1/tickets/132'
                      -
                        type: ticket
                        id: 131
                        attributes:
                          title: 'Ticket #11'
                          status: X
                          created_at: '2025-02-05T18:48:24.000000Z'
                          updated_at: '2025-02-05T18:48:24.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 3
                            links:
                              self: 'http://localhost/api/v1/authors/3'
                        links:
                          self: 'http://localhost/api/v1/tickets/131'
                      -
                        type: ticket
                        id: 130
                        attributes:
                          title: 'Ticket #11'
                          status: X
                          created_at: '2025-02-05T18:48:21.000000Z'
                          updated_at: '2025-02-05T18:48:21.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 3
                            links:
                              self: 'http://localhost/api/v1/authors/3'
                        links:
                          self: 'http://localhost/api/v1/tickets/130'
                      -
                        type: ticket
                        id: 129
                        attributes:
                          title: 'Ticket #11'
                          status: X
                          created_at: '2025-02-05T18:47:57.000000Z'
                          updated_at: '2025-02-05T18:47:57.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 3
                            links:
                              self: 'http://localhost/api/v1/authors/3'
                        links:
                          self: 'http://localhost/api/v1/tickets/129'
                      -
                        type: ticket
                        id: 128
                        attributes:
                          title: 'Ticket #11'
                          status: X
                          created_at: '2025-02-05T18:42:03.000000Z'
                          updated_at: '2025-02-05T18:42:03.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 3
                            links:
                              self: 'http://localhost/api/v1/authors/3'
                        links:
                          self: 'http://localhost/api/v1/tickets/128'
                      -
                        type: ticket
                        id: 127
                        attributes:
                          title: 'Ticket #10'
                          status: X
                          created_at: '2025-02-05T18:41:50.000000Z'
                          updated_at: '2025-02-05T18:41:50.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/127'
                      -
                        type: ticket
                        id: 126
                        attributes:
                          title: 'Ticket #9'
                          status: X
                          created_at: '2025-02-05T18:38:42.000000Z'
                          updated_at: '2025-02-05T18:38:42.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/126'
                      -
                        type: ticket
                        id: 125
                        attributes:
                          title: 'Ticket #9'
                          status: X
                          created_at: '2025-02-05T18:37:51.000000Z'
                          updated_at: '2025-02-05T18:37:51.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/125'
                      -
                        type: ticket
                        id: 124
                        attributes:
                          title: 'Ticket #9'
                          status: X
                          created_at: '2025-02-05T18:37:03.000000Z'
                          updated_at: '2025-02-05T18:37:03.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 2
                            links:
                              self: 'http://localhost/api/v1/authors/2'
                        links:
                          self: 'http://localhost/api/v1/tickets/124'
                      -
                        type: ticket
                        id: 123
                        attributes:
                          title: 'Ticket #9'
                          status: X
                          created_at: '2025-02-05T18:35:20.000000Z'
                          updated_at: '2025-02-05T18:35:20.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/123'
                      -
                        type: ticket
                        id: 122
                        attributes:
                          title: 'Ticket #9'
                          status: X
                          created_at: '2025-02-05T18:31:04.000000Z'
                          updated_at: '2025-02-05T18:31:04.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 2
                            links:
                              self: 'http://localhost/api/v1/authors/2'
                        links:
                          self: 'http://localhost/api/v1/tickets/122'
                      -
                        type: ticket
                        id: 121
                        attributes:
                          title: 'Ticket #9'
                          status: X
                          created_at: '2025-02-05T18:30:54.000000Z'
                          updated_at: '2025-02-05T18:30:54.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/121'
                      -
                        type: ticket
                        id: 120
                        attributes:
                          title: 'Create ticket title'
                          status: X
                          created_at: '2025-02-04T14:27:10.000000Z'
                          updated_at: '2025-02-04T14:27:10.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/120'
                      -
                        type: ticket
                        id: 119
                        attributes:
                          title: 'Ticket #8'
                          status: X
                          created_at: '2025-01-30T15:47:32.000000Z'
                          updated_at: '2025-01-30T15:47:32.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 2
                            links:
                              self: 'http://localhost/api/v1/authors/2'
                        links:
                          self: 'http://localhost/api/v1/tickets/119'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: ticket
                        id:
                          type: integer
                          example: 133
                        attributes:
                          type: object
                          properties:
                            title:
                              type: string
                              example: 'Ticket #111'
                            status:
                              type: string
                              example: X
                            created_at:
                              type: string
                              example: '2025-02-05T18:52:27.000000Z'
                            updated_at:
                              type: string
                              example: '2025-02-05T18:52:27.000000Z'
                        relationships:
                          type: object
                          properties:
                            author:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: user
                                    id:
                                      type: integer
                                      example: 1
                                links:
                                  type: object
                                  properties:
                                    self:
                                      type: string
                                      example: 'http://localhost/api/v1/authors/1'
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://localhost/api/v1/tickets/133'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/tickets?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/tickets?page=9'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://localhost/api/v1/tickets?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 9
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://localhost/api/v1/tickets?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=4'
                            label: '4'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=5'
                            label: '5'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=6'
                            label: '6'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=7'
                            label: '7'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=8'
                            label: '8'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=9'
                            label: '9'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/tickets'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 15
                      total:
                        type: integer
                        example: 126
      tags:
        - 'Managing Tickets'
    post:
      summary: 'Create a ticket'
      operationId: createATicket
      description: 'Creates a new ticket. Users can only create tickets for themselves. Managers can create tickets for any user.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: ticket
                    id: 105
                    attributes:
                      title: 'Create ticket title'
                      description: 'This ticket has a description'
                      status: A
                      created_at: '2025-01-30T12:38:32.000000Z'
                      updated_at: '2025-01-30T12:38:32.000000Z'
                    relationships:
                      author:
                        data:
                          type: user
                          id: '1'
                        links:
                          self: 'http://localhost/api/v1/authors/1'
                    links:
                      self: 'http://localhost/api/v1/tickets/105'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: ticket
                      id:
                        type: integer
                        example: 105
                      attributes:
                        type: object
                        properties:
                          title:
                            type: string
                            example: 'Create ticket title'
                          description:
                            type: string
                            example: 'This ticket has a description'
                          status:
                            type: string
                            example: A
                          created_at:
                            type: string
                            example: '2025-01-30T12:38:32.000000Z'
                          updated_at:
                            type: string
                            example: '2025-01-30T12:38:32.000000Z'
                      relationships:
                        type: object
                        properties:
                          author:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: user
                                  id:
                                    type: string
                                    example: '1'
                              links:
                                type: object
                                properties:
                                  self:
                                    type: string
                                    example: 'http://localhost/api/v1/authors/1'
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost/api/v1/tickets/105'
      tags:
        - 'Managing Tickets'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: "The ticket's title (method)."
                          example: null
                          nullable: false
                        description:
                          type: string
                          description: "The ticket's description."
                          example: null
                          nullable: false
                        status:
                          type: string
                          description: "The ticket's title status."
                          example: null
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: integer
                                  description: 'The author assign to the ticket. The <code>id</code> of an existing record in the users table.'
                                  example: null
                                  nullable: false
              required:
                - data
  '/api/v1/tickets/{id}':
    get:
      summary: 'Get a specific ticket'
      operationId: getASpecificTicket
      description: 'Display an individual ticket.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: ticket
                    id: 1
                    attributes:
                      title: 'cupiditate dolorem qui'
                      description: 'Vel nemo pariatur voluptatem consequuntur sit autem et sunt. Nulla non sunt aut ex iusto. Nobis repellendus ut alias non assumenda beatae. Quae nesciunt minus quo qui asperiores.'
                      status: X
                      created_at: '2025-01-21T13:57:47.000000Z'
                      updated_at: '2025-01-21T14:06:17.000000Z'
                    relationships:
                      author:
                        data:
                          type: user
                          id: 3
                        links:
                          self: 'http://localhost/api/v1/authors/3'
                    links:
                      self: 'http://localhost/api/v1/tickets/1'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: ticket
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          title:
                            type: string
                            example: 'cupiditate dolorem qui'
                          description:
                            type: string
                            example: 'Vel nemo pariatur voluptatem consequuntur sit autem et sunt. Nulla non sunt aut ex iusto. Nobis repellendus ut alias non assumenda beatae. Quae nesciunt minus quo qui asperiores.'
                          status:
                            type: string
                            example: X
                          created_at:
                            type: string
                            example: '2025-01-21T13:57:47.000000Z'
                          updated_at:
                            type: string
                            example: '2025-01-21T14:06:17.000000Z'
                      relationships:
                        type: object
                        properties:
                          author:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: user
                                  id:
                                    type: integer
                                    example: 3
                              links:
                                type: object
                                properties:
                                  self:
                                    type: string
                                    example: 'http://localhost/api/v1/authors/3'
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost/api/v1/tickets/1'
      tags:
        - 'Managing Tickets'
    delete:
      summary: 'Delete a ticket'
      operationId: deleteATicket
      description: 'Remove the specified ticket from storage.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Managing Tickets'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/tickets/{ticket_id}':
    put:
      summary: 'Replace a ticket'
      operationId: replaceATicket
      description: 'Replace the specified ticket in storage.'
      parameters: []
      responses: {  }
      tags:
        - 'Managing Tickets'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: qui
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Blanditiis quasi illum ut.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: H
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 6
                                  nullable: false
              required:
                - data
    patch:
      summary: 'Update the ticket'
      operationId: updateTheTicket
      description: 'Update the specified ticket in storage.'
      parameters: []
      responses: {  }
      tags:
        - 'Managing Tickets'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: distinctio
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Animi aut est sequi exercitationem repellendus.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: A
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 8
                                  nullable: false
    parameters:
      -
        in: path
        name: ticket_id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/authors/{author_id}/tickets':
    get:
      summary: 'Get all tickets'
      operationId: getAllTickets
      description: 'Retrieves all tickets created by a specific user.'
      parameters:
        -
          in: query
          name: sort
          description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
          example: sort=name
          required: false
          schema:
            type: string
            description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
            example: sort=name
            nullable: false
        -
          in: query
          name: 'filter[name]'
          description: 'Filter by name. Wildcards are supported.'
          example: null
          required: false
          schema:
            type: string
            description: 'Filter by name. Wildcards are supported.'
            example: null
            nullable: false
        -
          in: query
          name: 'filter[email]'
          description: 'Filter by email. Wildcards are supported.'
          example: null
          required: false
          schema:
            type: string
            description: 'Filter by email. Wildcards are supported.'
            example: null
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: ticket
                      id: 6
                      attributes:
                        title: 'PATCH Request works'
                        status: C
                        created_at: '2025-01-21T13:57:47.000000Z'
                        updated_at: '2025-01-21T16:08:19.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/6'
                    -
                      type: ticket
                      id: 29
                      attributes:
                        title: 'repellat eligendi sequi'
                        status: H
                        created_at: '2025-01-21T13:57:47.000000Z'
                        updated_at: '2025-01-21T13:57:47.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/29'
                    -
                      type: ticket
                      id: 32
                      attributes:
                        title: 'error repudiandae alias'
                        status: X
                        created_at: '2025-01-21T13:57:47.000000Z'
                        updated_at: '2025-01-21T13:57:47.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/32'
                    -
                      type: ticket
                      id: 37
                      attributes:
                        title: 'quisquam alias earum'
                        status: A
                        created_at: '2025-01-21T13:57:47.000000Z'
                        updated_at: '2025-01-21T13:57:47.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/37'
                    -
                      type: ticket
                      id: 42
                      attributes:
                        title: 'repellendus ipsam et'
                        status: H
                        created_at: '2025-01-21T13:57:47.000000Z'
                        updated_at: '2025-01-21T13:57:47.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/42'
                    -
                      type: ticket
                      id: 45
                      attributes:
                        title: 'quia saepe cupiditate'
                        status: X
                        created_at: '2025-01-21T13:57:47.000000Z'
                        updated_at: '2025-01-21T13:57:47.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/45'
                    -
                      type: ticket
                      id: 48
                      attributes:
                        title: 'vel ad quia'
                        status: X
                        created_at: '2025-01-21T13:57:47.000000Z'
                        updated_at: '2025-01-21T13:57:47.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/48'
                    -
                      type: ticket
                      id: 55
                      attributes:
                        title: 'eos minima et'
                        status: C
                        created_at: '2025-01-21T13:57:47.000000Z'
                        updated_at: '2025-01-21T13:57:47.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/55'
                    -
                      type: ticket
                      id: 57
                      attributes:
                        title: 'perferendis adipisci voluptates'
                        status: H
                        created_at: '2025-01-21T13:57:47.000000Z'
                        updated_at: '2025-01-21T13:57:47.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/57'
                    -
                      type: ticket
                      id: 69
                      attributes:
                        title: 'itaque dolor quidem'
                        status: A
                        created_at: '2025-01-21T13:57:47.000000Z'
                        updated_at: '2025-01-21T13:57:47.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/69'
                    -
                      type: ticket
                      id: 81
                      attributes:
                        title: 'non fuga sequi'
                        status: H
                        created_at: '2025-01-21T13:57:47.000000Z'
                        updated_at: '2025-01-21T13:57:47.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/81'
                    -
                      type: ticket
                      id: 84
                      attributes:
                        title: 'a quia aliquam'
                        status: C
                        created_at: '2025-01-21T13:57:47.000000Z'
                        updated_at: '2025-01-21T13:57:47.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/84'
                    -
                      type: ticket
                      id: 96
                      attributes:
                        title: 'magni ut commodi'
                        status: A
                        created_at: '2025-01-21T13:57:47.000000Z'
                        updated_at: '2025-01-21T13:57:47.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/96'
                    -
                      type: ticket
                      id: 101
                      attributes:
                        title: 'Replace this title'
                        status: A
                        created_at: '2025-01-21T15:07:48.000000Z'
                        updated_at: '2025-01-21T15:07:48.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/101'
                    -
                      type: ticket
                      id: 102
                      attributes:
                        title: 'a Ticket'
                        status: A
                        created_at: '2025-01-21T16:01:05.000000Z'
                        updated_at: '2025-01-21T16:01:05.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/102'
                  links:
                    first: 'http://localhost/api/v1/authors/1/tickets?page=1'
                    last: 'http://localhost/api/v1/authors/1/tickets?page=2'
                    prev: null
                    next: 'http://localhost/api/v1/authors/1/tickets?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 2
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors/1/tickets?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://localhost/api/v1/authors/1/tickets?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors/1/tickets?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/authors/1/tickets'
                    per_page: 15
                    to: 15
                    total: 28
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: ticket
                        id: 6
                        attributes:
                          title: 'PATCH Request works'
                          status: C
                          created_at: '2025-01-21T13:57:47.000000Z'
                          updated_at: '2025-01-21T16:08:19.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/6'
                      -
                        type: ticket
                        id: 29
                        attributes:
                          title: 'repellat eligendi sequi'
                          status: H
                          created_at: '2025-01-21T13:57:47.000000Z'
                          updated_at: '2025-01-21T13:57:47.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/29'
                      -
                        type: ticket
                        id: 32
                        attributes:
                          title: 'error repudiandae alias'
                          status: X
                          created_at: '2025-01-21T13:57:47.000000Z'
                          updated_at: '2025-01-21T13:57:47.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/32'
                      -
                        type: ticket
                        id: 37
                        attributes:
                          title: 'quisquam alias earum'
                          status: A
                          created_at: '2025-01-21T13:57:47.000000Z'
                          updated_at: '2025-01-21T13:57:47.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/37'
                      -
                        type: ticket
                        id: 42
                        attributes:
                          title: 'repellendus ipsam et'
                          status: H
                          created_at: '2025-01-21T13:57:47.000000Z'
                          updated_at: '2025-01-21T13:57:47.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/42'
                      -
                        type: ticket
                        id: 45
                        attributes:
                          title: 'quia saepe cupiditate'
                          status: X
                          created_at: '2025-01-21T13:57:47.000000Z'
                          updated_at: '2025-01-21T13:57:47.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/45'
                      -
                        type: ticket
                        id: 48
                        attributes:
                          title: 'vel ad quia'
                          status: X
                          created_at: '2025-01-21T13:57:47.000000Z'
                          updated_at: '2025-01-21T13:57:47.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/48'
                      -
                        type: ticket
                        id: 55
                        attributes:
                          title: 'eos minima et'
                          status: C
                          created_at: '2025-01-21T13:57:47.000000Z'
                          updated_at: '2025-01-21T13:57:47.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/55'
                      -
                        type: ticket
                        id: 57
                        attributes:
                          title: 'perferendis adipisci voluptates'
                          status: H
                          created_at: '2025-01-21T13:57:47.000000Z'
                          updated_at: '2025-01-21T13:57:47.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/57'
                      -
                        type: ticket
                        id: 69
                        attributes:
                          title: 'itaque dolor quidem'
                          status: A
                          created_at: '2025-01-21T13:57:47.000000Z'
                          updated_at: '2025-01-21T13:57:47.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/69'
                      -
                        type: ticket
                        id: 81
                        attributes:
                          title: 'non fuga sequi'
                          status: H
                          created_at: '2025-01-21T13:57:47.000000Z'
                          updated_at: '2025-01-21T13:57:47.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/81'
                      -
                        type: ticket
                        id: 84
                        attributes:
                          title: 'a quia aliquam'
                          status: C
                          created_at: '2025-01-21T13:57:47.000000Z'
                          updated_at: '2025-01-21T13:57:47.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/84'
                      -
                        type: ticket
                        id: 96
                        attributes:
                          title: 'magni ut commodi'
                          status: A
                          created_at: '2025-01-21T13:57:47.000000Z'
                          updated_at: '2025-01-21T13:57:47.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/96'
                      -
                        type: ticket
                        id: 101
                        attributes:
                          title: 'Replace this title'
                          status: A
                          created_at: '2025-01-21T15:07:48.000000Z'
                          updated_at: '2025-01-21T15:07:48.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/101'
                      -
                        type: ticket
                        id: 102
                        attributes:
                          title: 'a Ticket'
                          status: A
                          created_at: '2025-01-21T16:01:05.000000Z'
                          updated_at: '2025-01-21T16:01:05.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/102'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: ticket
                        id:
                          type: integer
                          example: 6
                        attributes:
                          type: object
                          properties:
                            title:
                              type: string
                              example: 'PATCH Request works'
                            status:
                              type: string
                              example: C
                            created_at:
                              type: string
                              example: '2025-01-21T13:57:47.000000Z'
                            updated_at:
                              type: string
                              example: '2025-01-21T16:08:19.000000Z'
                        relationships:
                          type: object
                          properties:
                            author:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: user
                                    id:
                                      type: integer
                                      example: 1
                                links:
                                  type: object
                                  properties:
                                    self:
                                      type: string
                                      example: 'http://localhost/api/v1/authors/1'
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://localhost/api/v1/tickets/6'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/authors/1/tickets?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/authors/1/tickets?page=2'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://localhost/api/v1/authors/1/tickets?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 2
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors/1/tickets?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://localhost/api/v1/authors/1/tickets?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors/1/tickets?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/authors/1/tickets'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 15
                      total:
                        type: integer
                        example: 28
      tags:
        - 'Managing Tickets by Author'
    post:
      summary: 'Create a ticket'
      operationId: createATicket
      description: 'Creates a ticket for a specific user.'
      parameters: []
      responses: {  }
      tags:
        - 'Managing Tickets by Author'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: "The ticket's title (method)."
                          example: null
                          nullable: false
                        description:
                          type: string
                          description: "The ticket's description."
                          example: null
                          nullable: false
                        status:
                          type: string
                          description: "The ticket's title status."
                          example: null
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                author:
                  type: integer
                  description: 'The author assign to the ticket. The <code>id</code> of an existing record in the users table.'
                  example: null
                  nullable: false
              required:
                - data
                - author
    parameters:
      -
        in: path
        name: author_id
        description: 'The ID of the author.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: authorId
        description: "The author's ID."
        example: null
        required: true
        schema:
          type: integer
  '/api/v1/authors/{author_id}/tickets/{id}':
    delete:
      summary: "Delete an author's ticket"
      operationId: deleteAnAuthorsTicket
      description: "Delete an author's ticket."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Managing Tickets by Author'
    parameters:
      -
        in: path
        name: author_id
        description: 'The ID of the author.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: authorId
        description: "The author's ID."
        example: null
        required: true
        schema:
          type: integer
      -
        in: path
        name: ticketId
        description: "The ticket's ID."
        example: null
        required: true
        schema:
          type: integer
  '/api/v1/authors/{author_id}/tickets/{ticket_id}':
    put:
      summary: "Replace an author's ticket"
      operationId: replaceAnAuthorsTicket
      description: 'Replaces a ticket for a specific user.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: ticket
                    id: 9
                    attributes:
                      title: 'New title'
                      description: 'Lore ipsum'
                      status: C
                      created_at: '2025-01-21T13:57:47.000000Z'
                      updated_at: '2025-01-30T13:16:42.000000Z'
                    relationships:
                      author:
                        data:
                          type: user
                          id: 4
                        links:
                          self: 'http://localhost/api/v1/authors/4'
                    links:
                      self: 'http://localhost/api/v1/tickets/9'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: ticket
                      id:
                        type: integer
                        example: 9
                      attributes:
                        type: object
                        properties:
                          title:
                            type: string
                            example: 'New title'
                          description:
                            type: string
                            example: 'Lore ipsum'
                          status:
                            type: string
                            example: C
                          created_at:
                            type: string
                            example: '2025-01-21T13:57:47.000000Z'
                          updated_at:
                            type: string
                            example: '2025-01-30T13:16:42.000000Z'
                      relationships:
                        type: object
                        properties:
                          author:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: user
                                  id:
                                    type: integer
                                    example: 4
                              links:
                                type: object
                                properties:
                                  self:
                                    type: string
                                    example: 'http://localhost/api/v1/authors/4'
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost/api/v1/tickets/9'
      tags:
        - 'Managing Tickets by Author'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: ipsum
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Quam et est voluptas dolores ut.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: H
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 18
                                  nullable: false
              required:
                - data
    patch:
      summary: "Update an author's ticket"
      operationId: updateAnAuthorsTicket
      description: "Update an author's ticket."
      parameters: []
      responses: {  }
      tags:
        - 'Managing Tickets by Author'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: molestiae
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Commodi iste earum cum qui dolorum sint itaque.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: X
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 5
                                  nullable: false
    parameters:
      -
        in: path
        name: author_id
        description: 'The ID of the author.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: ticket_id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: authorId
        description: "The author's ID."
        example: null
        required: true
        schema:
          type: integer
      -
        in: path
        name: ticketId
        description: "The ticket's ID."
        example: null
        required: true
        schema:
          type: integer
  /api/v1/users:
    get:
      summary: 'Get all users'
      operationId: getAllUsers
      description: ''
      parameters:
        -
          in: query
          name: sort
          description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
          example: sort=name
          required: false
          schema:
            type: string
            description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
            example: sort=name
            nullable: false
        -
          in: query
          name: 'filter[name]'
          description: 'Filter by name. Wildcards are supported.'
          example: null
          required: false
          schema:
            type: string
            description: 'Filter by name. Wildcards are supported.'
            example: null
            nullable: false
        -
          in: query
          name: 'filter[email]'
          description: 'Filter by email. Wildcards are supported.'
          example: null
          required: false
          schema:
            type: string
            description: 'Filter by email. Wildcards are supported.'
            example: null
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: user
                      id: 1
                      attributes:
                        name: 'Dr. Rigoberto Renner IV'
                        email: corbin.wolff@example.com
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/1'
                    -
                      type: user
                      id: 2
                      attributes:
                        name: 'Electa Mertz'
                        email: mcormier@example.org
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/2'
                    -
                      type: user
                      id: 3
                      attributes:
                        name: 'Ms. Anne Gleichner'
                        email: bhodkiewicz@example.com
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/3'
                    -
                      type: user
                      id: 4
                      attributes:
                        name: 'Eleazar Johns'
                        email: melyssa.lebsack@example.com
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/4'
                    -
                      type: user
                      id: 5
                      attributes:
                        name: 'Cheyanne Leffler'
                        email: considine.pedro@example.net
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/5'
                    -
                      type: user
                      id: 6
                      attributes:
                        name: 'Krystina Leannon'
                        email: rkihn@example.net
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/6'
                    -
                      type: user
                      id: 7
                      attributes:
                        name: 'Dr. Mary Bogan Sr.'
                        email: maggio.brandt@example.com
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/7'
                    -
                      type: user
                      id: 8
                      attributes:
                        name: 'Jaclyn Sauer'
                        email: henry42@example.net
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/8'
                    -
                      type: user
                      id: 9
                      attributes:
                        name: 'Prof. Madisyn Stroman'
                        email: kohler.maudie@example.com
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/9'
                    -
                      type: user
                      id: 10
                      attributes:
                        name: 'Prof. Berta McLaughlin PhD'
                        email: camilla98@example.com
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/10'
                    -
                      type: user
                      id: 11
                      attributes:
                        name: 'The Manager'
                        email: manager@manager.com
                        isManager: true
                      links:
                        self: 'http://localhost/api/v1/authors/11'
                    -
                      type: user
                      id: 14
                      attributes:
                        name: 'My User'
                        email: user@user.com
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/14'
                  links:
                    first: 'http://localhost/api/v1/users?page=1'
                    last: 'http://localhost/api/v1/users?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/users?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/users'
                    per_page: 15
                    to: 12
                    total: 12
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: user
                        id: 1
                        attributes:
                          name: 'Dr. Rigoberto Renner IV'
                          email: corbin.wolff@example.com
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/1'
                      -
                        type: user
                        id: 2
                        attributes:
                          name: 'Electa Mertz'
                          email: mcormier@example.org
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/2'
                      -
                        type: user
                        id: 3
                        attributes:
                          name: 'Ms. Anne Gleichner'
                          email: bhodkiewicz@example.com
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/3'
                      -
                        type: user
                        id: 4
                        attributes:
                          name: 'Eleazar Johns'
                          email: melyssa.lebsack@example.com
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/4'
                      -
                        type: user
                        id: 5
                        attributes:
                          name: 'Cheyanne Leffler'
                          email: considine.pedro@example.net
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/5'
                      -
                        type: user
                        id: 6
                        attributes:
                          name: 'Krystina Leannon'
                          email: rkihn@example.net
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/6'
                      -
                        type: user
                        id: 7
                        attributes:
                          name: 'Dr. Mary Bogan Sr.'
                          email: maggio.brandt@example.com
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/7'
                      -
                        type: user
                        id: 8
                        attributes:
                          name: 'Jaclyn Sauer'
                          email: henry42@example.net
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/8'
                      -
                        type: user
                        id: 9
                        attributes:
                          name: 'Prof. Madisyn Stroman'
                          email: kohler.maudie@example.com
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/9'
                      -
                        type: user
                        id: 10
                        attributes:
                          name: 'Prof. Berta McLaughlin PhD'
                          email: camilla98@example.com
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/10'
                      -
                        type: user
                        id: 11
                        attributes:
                          name: 'The Manager'
                          email: manager@manager.com
                          isManager: true
                        links:
                          self: 'http://localhost/api/v1/authors/11'
                      -
                        type: user
                        id: 14
                        attributes:
                          name: 'My User'
                          email: user@user.com
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/14'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: user
                        id:
                          type: integer
                          example: 1
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'Dr. Rigoberto Renner IV'
                            email:
                              type: string
                              example: corbin.wolff@example.com
                            isManager:
                              type: boolean
                              example: false
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://localhost/api/v1/authors/1'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/users?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/users?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/users?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/users'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 12
                      total:
                        type: integer
                        example: 12
      tags:
        - 'Managing Users'
    post:
      summary: 'Create a user'
      operationId: createAUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 14
                    attributes:
                      name: 'My User'
                      email: user@user.com
                      isManager: false
                    links:
                      self: 'http://localhost/api/v1/authors/14'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 14
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'My User'
                          email:
                            type: string
                            example: user@user.com
                          isManager:
                            type: boolean
                            example: false
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost/api/v1/authors/14'
      tags:
        - 'Managing Users'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        name:
                          type: string
                          description: ''
                          example: sunt
                          nullable: false
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: bgibson@example.net
                          nullable: false
                        isManager:
                          type: boolean
                          description: ''
                          example: false
                          nullable: false
                        password:
                          type: string
                          description: ''
                          example: 'b>9@=669V!}'
                          nullable: false
              required:
                - data
  '/api/v1/users/{id}':
    get:
      summary: 'Get a specific user'
      operationId: getASpecificUser
      description: 'Display an individual user.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 1
                    attributes:
                      name: 'Dr. Rigoberto Renner IV'
                      email: corbin.wolff@example.com
                      isManager: false
                    links:
                      self: 'http://localhost/api/v1/authors/1'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Dr. Rigoberto Renner IV'
                          email:
                            type: string
                            example: corbin.wolff@example.com
                          isManager:
                            type: boolean
                            example: false
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost/api/v1/authors/1'
      tags:
        - 'Managing Users'
    delete:
      summary: 'Delete a user'
      operationId: deleteAUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Managing Users'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/users/{user_id}':
    put:
      summary: 'Replace a user'
      operationId: replaceAUser
      description: 'Replace the specified user.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 14
                    attributes:
                      name: 'My User'
                      email: user@user.com
                      isManager: false
                    links:
                      self: 'http://localhost/api/v1/authors/14'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 14
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'My User'
                          email:
                            type: string
                            example: user@user.com
                          isManager:
                            type: boolean
                            example: false
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost/api/v1/authors/14'
      tags:
        - 'Managing Users'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        name:
                          type: string
                          description: ''
                          example: quas
                          nullable: false
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: dubuque.anderson@example.net
                          nullable: false
                        isManager:
                          type: boolean
                          description: ''
                          example: false
                          nullable: false
                        password:
                          type: string
                          description: ''
                          example: Dmg;L_Sr7~Ol<
                          nullable: false
              required:
                - data
    patch:
      summary: 'Update the user'
      operationId: updateTheUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 14
                    attributes:
                      name: 'My User'
                      email: user@user.com
                      isManager: false
                    links:
                      self: 'http://localhost/api/v1/authors/14'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 14
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'My User'
                          email:
                            type: string
                            example: user@user.com
                          isManager:
                            type: boolean
                            example: false
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost/api/v1/authors/14'
      tags:
        - 'Managing Users'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        name:
                          type: string
                          description: ''
                          example: distinctio
                          nullable: false
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: tevin03@example.org
                          nullable: false
                        isManager:
                          type: boolean
                          description: ''
                          example: false
                          nullable: false
                        password:
                          type: string
                          description: ''
                          example: '^XG<E=k[L,(0lO'
                          nullable: false
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/authors:
    get:
      summary: 'Get all authors'
      operationId: getAllAuthors
      description: 'Retrieves all users that have created tickets.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: user
                      id: 1
                      attributes:
                        name: 'Dr. Rigoberto Renner IV'
                        email: corbin.wolff@example.com
                        isManager: false
                        emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                        createdAt: '2025-01-21T13:57:47.000000Z'
                        udpatedAt: '2025-01-21T13:57:47.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/1'
                    -
                      type: user
                      id: 2
                      attributes:
                        name: 'Electa Mertz'
                        email: mcormier@example.org
                        isManager: false
                        emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                        createdAt: '2025-01-21T13:57:47.000000Z'
                        udpatedAt: '2025-01-21T13:57:47.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/2'
                    -
                      type: user
                      id: 3
                      attributes:
                        name: 'Ms. Anne Gleichner'
                        email: bhodkiewicz@example.com
                        isManager: false
                        emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                        createdAt: '2025-01-21T13:57:47.000000Z'
                        udpatedAt: '2025-01-21T13:57:47.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/3'
                    -
                      type: user
                      id: 4
                      attributes:
                        name: 'Eleazar Johns'
                        email: melyssa.lebsack@example.com
                        isManager: false
                        emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                        createdAt: '2025-01-21T13:57:47.000000Z'
                        udpatedAt: '2025-01-21T13:57:47.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/4'
                    -
                      type: user
                      id: 5
                      attributes:
                        name: 'Cheyanne Leffler'
                        email: considine.pedro@example.net
                        isManager: false
                        emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                        createdAt: '2025-01-21T13:57:47.000000Z'
                        udpatedAt: '2025-01-21T13:57:47.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/5'
                    -
                      type: user
                      id: 6
                      attributes:
                        name: 'Krystina Leannon'
                        email: rkihn@example.net
                        isManager: false
                        emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                        createdAt: '2025-01-21T13:57:47.000000Z'
                        udpatedAt: '2025-01-21T13:57:47.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/6'
                    -
                      type: user
                      id: 7
                      attributes:
                        name: 'Dr. Mary Bogan Sr.'
                        email: maggio.brandt@example.com
                        isManager: false
                        emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                        createdAt: '2025-01-21T13:57:47.000000Z'
                        udpatedAt: '2025-01-21T13:57:47.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/7'
                    -
                      type: user
                      id: 8
                      attributes:
                        name: 'Jaclyn Sauer'
                        email: henry42@example.net
                        isManager: false
                        emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                        createdAt: '2025-01-21T13:57:47.000000Z'
                        udpatedAt: '2025-01-21T13:57:47.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/8'
                    -
                      type: user
                      id: 9
                      attributes:
                        name: 'Prof. Madisyn Stroman'
                        email: kohler.maudie@example.com
                        isManager: false
                        emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                        createdAt: '2025-01-21T13:57:47.000000Z'
                        udpatedAt: '2025-01-21T13:57:47.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/9'
                    -
                      type: user
                      id: 10
                      attributes:
                        name: 'Prof. Berta McLaughlin PhD'
                        email: camilla98@example.com
                        isManager: false
                        emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                        createdAt: '2025-01-21T13:57:47.000000Z'
                        udpatedAt: '2025-01-21T13:57:47.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/10'
                    -
                      type: user
                      id: 11
                      attributes:
                        name: 'The Manager'
                        email: manager@manager.com
                        isManager: true
                        emailVerifiedAt: null
                        createdAt: '2025-01-21T13:57:48.000000Z'
                        udpatedAt: '2025-01-21T13:57:48.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/11'
                  links:
                    first: 'http://localhost/api/v1/authors?page=1'
                    last: 'http://localhost/api/v1/authors?page=9'
                    prev: null
                    next: 'http://localhost/api/v1/authors?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 9
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://localhost/api/v1/authors?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors?page=4'
                        label: '4'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors?page=5'
                        label: '5'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors?page=6'
                        label: '6'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors?page=7'
                        label: '7'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors?page=8'
                        label: '8'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors?page=9'
                        label: '9'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/authors'
                    per_page: 15
                    to: 11
                    total: 126
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: user
                        id: 1
                        attributes:
                          name: 'Dr. Rigoberto Renner IV'
                          email: corbin.wolff@example.com
                          isManager: false
                          emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                          createdAt: '2025-01-21T13:57:47.000000Z'
                          udpatedAt: '2025-01-21T13:57:47.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/1'
                      -
                        type: user
                        id: 2
                        attributes:
                          name: 'Electa Mertz'
                          email: mcormier@example.org
                          isManager: false
                          emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                          createdAt: '2025-01-21T13:57:47.000000Z'
                          udpatedAt: '2025-01-21T13:57:47.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/2'
                      -
                        type: user
                        id: 3
                        attributes:
                          name: 'Ms. Anne Gleichner'
                          email: bhodkiewicz@example.com
                          isManager: false
                          emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                          createdAt: '2025-01-21T13:57:47.000000Z'
                          udpatedAt: '2025-01-21T13:57:47.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/3'
                      -
                        type: user
                        id: 4
                        attributes:
                          name: 'Eleazar Johns'
                          email: melyssa.lebsack@example.com
                          isManager: false
                          emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                          createdAt: '2025-01-21T13:57:47.000000Z'
                          udpatedAt: '2025-01-21T13:57:47.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/4'
                      -
                        type: user
                        id: 5
                        attributes:
                          name: 'Cheyanne Leffler'
                          email: considine.pedro@example.net
                          isManager: false
                          emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                          createdAt: '2025-01-21T13:57:47.000000Z'
                          udpatedAt: '2025-01-21T13:57:47.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/5'
                      -
                        type: user
                        id: 6
                        attributes:
                          name: 'Krystina Leannon'
                          email: rkihn@example.net
                          isManager: false
                          emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                          createdAt: '2025-01-21T13:57:47.000000Z'
                          udpatedAt: '2025-01-21T13:57:47.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/6'
                      -
                        type: user
                        id: 7
                        attributes:
                          name: 'Dr. Mary Bogan Sr.'
                          email: maggio.brandt@example.com
                          isManager: false
                          emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                          createdAt: '2025-01-21T13:57:47.000000Z'
                          udpatedAt: '2025-01-21T13:57:47.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/7'
                      -
                        type: user
                        id: 8
                        attributes:
                          name: 'Jaclyn Sauer'
                          email: henry42@example.net
                          isManager: false
                          emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                          createdAt: '2025-01-21T13:57:47.000000Z'
                          udpatedAt: '2025-01-21T13:57:47.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/8'
                      -
                        type: user
                        id: 9
                        attributes:
                          name: 'Prof. Madisyn Stroman'
                          email: kohler.maudie@example.com
                          isManager: false
                          emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                          createdAt: '2025-01-21T13:57:47.000000Z'
                          udpatedAt: '2025-01-21T13:57:47.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/9'
                      -
                        type: user
                        id: 10
                        attributes:
                          name: 'Prof. Berta McLaughlin PhD'
                          email: camilla98@example.com
                          isManager: false
                          emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                          createdAt: '2025-01-21T13:57:47.000000Z'
                          udpatedAt: '2025-01-21T13:57:47.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/10'
                      -
                        type: user
                        id: 11
                        attributes:
                          name: 'The Manager'
                          email: manager@manager.com
                          isManager: true
                          emailVerifiedAt: null
                          createdAt: '2025-01-21T13:57:48.000000Z'
                          udpatedAt: '2025-01-21T13:57:48.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/11'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: user
                        id:
                          type: integer
                          example: 1
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'Dr. Rigoberto Renner IV'
                            email:
                              type: string
                              example: corbin.wolff@example.com
                            isManager:
                              type: boolean
                              example: false
                            emailVerifiedAt:
                              type: string
                              example: '2025-01-21T13:57:47.000000Z'
                            createdAt:
                              type: string
                              example: '2025-01-21T13:57:47.000000Z'
                            udpatedAt:
                              type: string
                              example: '2025-01-21T13:57:47.000000Z'
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://localhost/api/v1/authors/1'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/authors?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/authors?page=9'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://localhost/api/v1/authors?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 9
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://localhost/api/v1/authors?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors?page=4'
                            label: '4'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors?page=5'
                            label: '5'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors?page=6'
                            label: '6'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors?page=7'
                            label: '7'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors?page=8'
                            label: '8'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors?page=9'
                            label: '9'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/authors'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 11
                      total:
                        type: integer
                        example: 126
      tags:
        - 'Showing Authors'
  '/api/v1/authors/{id}':
    get:
      summary: 'Get a specific author'
      operationId: getASpecificAuthor
      description: 'Display an individual user.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 1
                    attributes:
                      name: 'Dr. Rigoberto Renner IV'
                      email: corbin.wolff@example.com
                      isManager: false
                      emailVerifiedAt: '2025-01-21T13:57:47.000000Z'
                      createdAt: '2025-01-21T13:57:47.000000Z'
                      udpatedAt: '2025-01-21T13:57:47.000000Z'
                    links:
                      self: 'http://localhost/api/v1/authors/1'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Dr. Rigoberto Renner IV'
                          email:
                            type: string
                            example: corbin.wolff@example.com
                          isManager:
                            type: boolean
                            example: false
                          emailVerifiedAt:
                            type: string
                            example: '2025-01-21T13:57:47.000000Z'
                          createdAt:
                            type: string
                            example: '2025-01-21T13:57:47.000000Z'
                          udpatedAt:
                            type: string
                            example: '2025-01-21T13:57:47.000000Z'
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost/api/v1/authors/1'
      tags:
        - 'Showing Authors'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the author.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: 'Managing Tickets'
    description: ''
  -
    name: 'Managing Tickets by Author'
    description: ''
  -
    name: 'Managing Users'
    description: ''
  -
    name: 'Showing Authors'
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
